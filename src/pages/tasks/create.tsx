import {
  Box,
  Button,
  CircularProgress,
  Container,
  CssBaseline,
  TextField,
} from "@mui/material";
import Head from "next/head";
import { useFormik } from "formik";
import { object, string } from "yup";

import PostAddIcon from "@mui/icons-material/PostAdd";

import AppBar from "@/components/AppBar";
import { useAuth } from "@/context/auth";
import { useTasks } from "@/context/tasks";

const validationSchema = object().shape({
  title: string().required(),
});

export default function CreateTaskPage() {
  const { user } = useAuth();
  const { createTask } = useTasks();

  const formik = useFormik({
    initialValues: {
      title: "",
    },
    validationSchema,
    onSubmit: handleCreate,
  });

  async function handleCreate({ title }: any) {
    createTask({
      user_id: user?.id,
      title,
    });
  }

  return (
    <>
      <Head>
        <title>Nova Tarefa | Tânia Bulhões</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <CssBaseline />

      <Box
        sx={{ display: "flex", flexDirection: "column", minHeight: "100vh" }}
      >
        <AppBar title="Nova Tarefa" user={user} />

        <Box
          sx={{
            display: "flex",
            flexDirection: "column",
            flexGrow: 1,
            alignItems: "center",
            justifyContent: "center",
          }}
        >
          <form
            onSubmit={formik.handleSubmit}
            style={{ maxWidth: "640px", width: "100%", padding: 12 }}
          >
            <Box
              sx={{
                display: "flex",
                flexDirection: "column",
                alignItems: "center",
                justifyContent: "center",
                width: "100%",
                maxWidth: "640px",
              }}
            >
              <TextField
                fullWidth
                id="title"
                name="title"
                label="Título"
                value={formik.values.title}
                onChange={formik.handleChange}
                error={formik.touched.title && Boolean(formik.errors.title)}
                helperText={formik.touched.title && formik.errors.title}
                variant="outlined"
                sx={{ marginBottom: 2 }}
              />

              <Button
                variant="contained"
                color="primary"
                type="submit"
                size="large"
                startIcon={
                  formik.isSubmitting ? (
                    <CircularProgress size={20} />
                  ) : (
                    <PostAddIcon />
                  )
                }
                disabled={formik.isSubmitting}
              >
                Criar Tarefa
              </Button>
            </Box>
          </form>
        </Box>
      </Box>
    </>
  );
}
